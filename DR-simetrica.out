----- Otter 3.3f, August 2004 -----
The process was started by jalonso on lulio,
Sun Aug 28 15:46:20 2022
The command was "otter".  The process ID is 31517.

include("Definiciones.in").
------- start included file Definiciones.in-------

formula_list(usable).
all x y (PO(x,y)<-> (exists z (z<=x&z<=y))& (exists z (z<=x& -(z<=y)))& (exists z (-(z<=x)&z<=y))).
all x y (DR(x,y)<-> -(exists z (z<=x&z<=y))).
all x y (EQ(x,y)<->x=y).
all x y (PP(x,y)<-> (all z (z<=x->z<=y))& (exists z (-(z<=x)&z<=y))).
all x y (PPi(x,y)<->PP(y,x)).
end_of_list.

-------> usable clausifies to:

list(usable).
1 [] -PO(x,y)|$f1(x,y)<=x.
2 [] -PO(x,y)|$f1(x,y)<=y.
3 [] -PO(x,y)|$f2(x,y)<=x.
4 [] -PO(x,y)| -($f2(x,y)<=y).
5 [] -PO(x,y)| -($f3(x,y)<=x).
6 [] -PO(x,y)|$f3(x,y)<=y.
7 [] PO(x,y)| -(z<=x)| -(z<=y)| -(x1<=x)|x1<=y|x2<=x| -(x2<=y).
8 [] -DR(x,y)| -(z<=x)| -(z<=y).
9 [] DR(x,y)|$f4(x,y)<=x.
10 [] DR(x,y)|$f4(x,y)<=y.
11 [] -EQ(x,y)|x=y.
12 [] EQ(x,y)|x!=y.
13 [] -PP(x,y)| -(z<=x)|z<=y.
14 [] -PP(x,y)| -($f5(x,y)<=x).
15 [] -PP(x,y)|$f5(x,y)<=y.
16 [] PP(x,y)|$f6(x,y)<=x|x3<=x| -(x3<=y).
17 [] PP(x,y)| -($f6(x,y)<=y)|x3<=x| -(x3<=y).
18 [] -PPi(x,y)|PP(y,x).
19 [] PPi(x,y)| -PP(y,x).
end_of_list.

formula_list(usable).
all x (x<=x).
all x y (x<=y&y<=x->x=y).
all x y z (x<=y&y<=z->x<=z).
end_of_list.

-------> usable clausifies to:

list(usable).
20 [] x<=x.
21 [] -(x<=y)| -(y<=x)|x=y.
22 [] -(x<=y)| -(y<=z)|x<=z.
end_of_list.
------- end included file Definiciones.in-------
set(auto).
   dependent: set(auto1).
   dependent: set(process_input).
   dependent: clear(print_kept).
   dependent: clear(print_new_demod).
   dependent: clear(print_back_demod).
   dependent: clear(print_back_sub).
   dependent: set(control_memory).
   dependent: assign(max_mem, 12000).
   dependent: assign(pick_given_ratio, 4).
   dependent: assign(stats_level, 1).
   dependent: assign(max_seconds, 10800).

formula_list(sos).
-(all x y (DR(x,y)<->DR(y,x))).
end_of_list.

-------> sos clausifies to:

list(sos).
0 [] DR($c2,$c1)|DR($c1,$c2).
0 [] -DR($c2,$c1)| -DR($c1,$c2).
end_of_list.
WARNING: Sos list not accepted in auto1 mode:
         sos clauses are being moved to usable list.

SCAN INPUT: prop=0, horn=0, equality=1, symmetry=0, max_lits=7.

This ia a non-Horn set with equality.  The strategy will be
Knuth-Bendix, ordered hyper_res, factoring, and unit
deletion, with positive clauses in sos and nonpositive
clauses in usable.

   dependent: set(knuth_bendix).
   dependent: set(anl_eq).
   dependent: set(para_from).
   dependent: set(para_into).
   dependent: clear(para_from_right).
   dependent: clear(para_into_right).
   dependent: set(para_from_vars).
   dependent: set(eq_units_both_ways).
   dependent: set(dynamic_demod_all).
   dependent: set(dynamic_demod).
   dependent: set(order_eq).
   dependent: set(back_demod).
   dependent: set(lrpo).
   dependent: set(hyper_res).
   dependent: set(unit_deletion).
   dependent: set(factor).

------------> process usable:
WARNING, cl_integrate gets clause with ID: 1 [] -PO(x,y)|$f1(x,y)<=x.
** KEPT (pick-wt=8): 1 [] -PO(x,y)|$f1(x,y)<=x.
WARNING, cl_integrate gets clause with ID: 2 [] -PO(x,y)|$f1(x,y)<=y.
** KEPT (pick-wt=8): 2 [] -PO(x,y)|$f1(x,y)<=y.
WARNING, cl_integrate gets clause with ID: 3 [] -PO(x,y)|$f2(x,y)<=x.
** KEPT (pick-wt=8): 3 [] -PO(x,y)|$f2(x,y)<=x.
WARNING, cl_integrate gets clause with ID: 4 [] -PO(x,y)| -($f2(x,y)<=y).
** KEPT (pick-wt=8): 4 [] -PO(x,y)| -($f2(x,y)<=y).
WARNING, cl_integrate gets clause with ID: 5 [] -PO(x,y)| -($f3(x,y)<=x).
** KEPT (pick-wt=8): 5 [] -PO(x,y)| -($f3(x,y)<=x).
WARNING, cl_integrate gets clause with ID: 6 [] -PO(x,y)|$f3(x,y)<=y.
** KEPT (pick-wt=8): 6 [] -PO(x,y)|$f3(x,y)<=y.
WARNING, cl_integrate gets clause with ID: 7 [] PO(x,y)| -(z<=x)| -(z<=y)| -(u<=x)|u<=y|v<=x| -(v<=y).
** KEPT (pick-wt=21): 7 [] PO(x,y)| -(z<=x)| -(z<=y)| -(u<=x)|u<=y|v<=x| -(v<=y).
WARNING, cl_integrate gets clause with ID: 8 [] -DR(x,y)| -(z<=x)| -(z<=y).
** KEPT (pick-wt=9): 8 [] -DR(x,y)| -(z<=x)| -(z<=y).
WARNING, cl_integrate gets clause with ID: 11 [] -EQ(x,y)|x=y.
** KEPT (pick-wt=6): 11 [] -EQ(x,y)|x=y.
WARNING, cl_integrate gets clause with ID: 12 [] EQ(x,y)|x!=y.
** KEPT (pick-wt=6): 12 [] EQ(x,y)|x!=y.
WARNING, cl_integrate gets clause with ID: 13 [] -PP(x,y)| -(z<=x)|z<=y.
** KEPT (pick-wt=9): 13 [] -PP(x,y)| -(z<=x)|z<=y.
WARNING, cl_integrate gets clause with ID: 14 [] -PP(x,y)| -($f5(x,y)<=x).
** KEPT (pick-wt=8): 14 [] -PP(x,y)| -($f5(x,y)<=x).
WARNING, cl_integrate gets clause with ID: 15 [] -PP(x,y)|$f5(x,y)<=y.
** KEPT (pick-wt=8): 15 [] -PP(x,y)|$f5(x,y)<=y.
WARNING, cl_integrate gets clause with ID: 16 [] PP(x,y)|$f6(x,y)<=x|z<=x| -(z<=y).
** KEPT (pick-wt=14): 16 [] PP(x,y)|$f6(x,y)<=x|z<=x| -(z<=y).
WARNING, cl_integrate gets clause with ID: 17 [] PP(x,y)| -($f6(x,y)<=y)|z<=x| -(z<=y).
** KEPT (pick-wt=14): 17 [] PP(x,y)| -($f6(x,y)<=y)|z<=x| -(z<=y).
WARNING, cl_integrate gets clause with ID: 18 [] -PPi(x,y)|PP(y,x).
** KEPT (pick-wt=6): 18 [] -PPi(x,y)|PP(y,x).
WARNING, cl_integrate gets clause with ID: 19 [] PPi(x,y)| -PP(y,x).
** KEPT (pick-wt=6): 19 [] PPi(x,y)| -PP(y,x).
WARNING, cl_integrate gets clause with ID: 21 [] -(x<=y)| -(y<=x)|x=y.
** KEPT (pick-wt=9): 21 [] -(x<=y)| -(y<=x)|x=y.
WARNING, cl_integrate gets clause with ID: 22 [] -(x<=y)| -(y<=z)|x<=z.
** KEPT (pick-wt=9): 22 [] -(x<=y)| -(y<=z)|x<=z.
** KEPT (pick-wt=6): 23 [] -DR($c2,$c1)| -DR($c1,$c2).

------------> process sos:
WARNING, cl_integrate gets clause with ID: 9 [] DR(x,y)|$f4(x,y)<=x.
** KEPT (pick-wt=8): 9 [] DR(x,y)|$f4(x,y)<=x.
WARNING, cl_integrate gets clause with ID: 10 [] DR(x,y)|$f4(x,y)<=y.
** KEPT (pick-wt=8): 10 [] DR(x,y)|$f4(x,y)<=y.
WARNING, cl_integrate gets clause with ID: 20 [] x<=x.
** KEPT (pick-wt=3): 20 [] x<=x.
** KEPT (pick-wt=6): 27 [] DR($c2,$c1)|DR($c1,$c2).

======= end of input processing =======

=========== start of search ===========

given clause #1: (wt=8) 9 [] DR(x,y)|$f4(x,y)<=x.

given clause #2: (wt=3) 20 [] x<=x.

given clause #3: (wt=3) 32 [hyper,20,26] x=x.

given clause #4: (wt=3) 35 [hyper,32,12] EQ(x,x).

given clause #5: (wt=5) 33 [hyper,20,24,9] $f4(x,x)<=x.

given clause #6: (wt=8) 10 [] DR(x,y)|$f4(x,y)<=y.

given clause #7: (wt=6) 27 [] DR($c2,$c1)|DR($c1,$c2).

given clause #8: (wt=7) 39 [hyper,33,8,9,20] $f4(x,$f4(x,x))<=x.

given clause #9: (wt=7) 47 [hyper,10,8,20,33] $f4($f4(x,x),x)<=x.

given clause #10: (wt=8) 41 [para_into,33.1.1,12.1.1] x<=y|$f4(y,y)!=x.

given clause #11: (wt=10) 28 [hyper,9,23,9] $f4($c1,$c2)<=$c1|$f4($c2,$c1)<=$c2.

given clause #12: (wt=8) 42 [para_into,33.1.1,11.2.1] x<=y| -EQ($f4(y,y),x).

given clause #13: (wt=9) 36 [hyper,33,22,33] $f4($f4(x,x),$f4(x,x))<=x.

given clause #14: (wt=9) 38 [hyper,33,8,9,20] $f4($f4(x,x),x)<=$f4(x,x).

given clause #15: (wt=9) 46 [hyper,10,8,33,20] $f4(x,$f4(x,x))<=$f4(x,x).

given clause #16: (wt=16) 29 [para_into,9.2.1,21.3.1] DR(x,y)|z<=x| -($f4(x,y)<=z)| -(z<=$f4(x,y)).

given clause #17: (wt=9) 52 [para_into,27.1.1,12.1.1] DR(x,$c1)|DR($c1,$c2)|$c2!=x.

given clause #18: (wt=6) 216 [factor,204.1.2,factor_simp] DR($c1,$c2)|$c2!=$c1.

given clause #19: (wt=6) 217 [factor,210.1.2,factor_simp] DR($c1,$c1)|$c2!=$c1.

given clause #20: (wt=9) 53 [para_into,27.1.1,11.2.1] DR(x,$c1)|DR($c1,$c2)| -EQ($c2,x).

given clause #21: (wt=11) 30 [para_into,9.2.1,12.1.1] DR(x,y)|z<=x|$f4(x,y)!=z.

given clause #22: (wt=6) 250 [factor,239.1.2,factor_simp] DR($c1,$c2)| -EQ($c2,$c1).

given clause #23: (wt=6) 251 [factor,245.1.2,factor_simp] DR($c1,$c1)| -EQ($c2,$c1).

given clause #24: (wt=9) 55 [para_into,27.1.2,12.1.1] DR($c2,x)|DR($c1,$c2)|$c1!=x.

given clause #25: (wt=6) 284 [factor,276.1.2,factor_simp] DR($c2,$c2)|$c2!=$c1.

given clause #26: (wt=11) 31 [para_into,9.2.1,11.2.1] DR(x,y)|z<=x| -EQ($f4(x,y),z).

given clause #27: (wt=6) 295 [factor,290.2.3] DR($c2,$c1)|$c2!=$c1.

given clause #28: (wt=9) 56 [para_into,27.1.2,11.2.1] DR($c2,x)|DR($c1,$c2)| -EQ($c1,x).

given clause #29: (wt=6) 318 [factor,311.1.2,factor_simp] DR($c2,$c2)| -EQ($c2,$c1).

given clause #30: (wt=6) 329 [factor,325.2.3] DR($c2,$c1)| -EQ($c2,$c1).

given clause #31: (wt=11) 34 [hyper,20,16] PP(x,y)|$f6(x,y)<=x|y<=x.

given clause #32: (wt=9) 58 [para_into,27.2.1,12.1.1] DR($c2,$c1)|DR(x,$c2)|$c1!=x.

given clause #33: (wt=9) 59 [para_into,27.2.1,11.2.1] DR($c2,$c1)|DR(x,$c2)| -EQ($c1,x).

given clause #34: (wt=9) 61 [para_into,27.2.2,12.1.1] DR($c2,$c1)|DR($c1,x)|$c2!=x.

given clause #35: (wt=9) 62 [para_into,27.2.2,11.2.1] DR($c2,$c1)|DR($c1,x)| -EQ($c2,x).

given clause #36: (wt=13) 37 [hyper,33,16] PP(x,y)|$f6(x,y)<=x|$f4(y,y)<=x.

given clause #37: (wt=9) 67 [hyper,39,8,10,20] $f4($f4(x,$f4(x,x)),x)<=x.

given clause #38: (wt=9) 70 [hyper,39,8,9,20] $f4(x,$f4(x,$f4(x,x)))<=x.

given clause #39: (wt=9) 83 [hyper,47,8,10,20] $f4($f4($f4(x,x),x),x)<=x.

given clause #40: (wt=9) 86 [hyper,47,8,9,20] $f4(x,$f4($f4(x,x),x))<=x.

given clause #41: (wt=13) 40 [para_into,33.1.1,21.3.1] x<=y| -($f4(y,y)<=x)| -(x<=$f4(y,y)).

given clause #42: (wt=9) 218 [factor,210.3.4] DR(x,$c1)|DR($c1,x)|$c2!=x.

given clause #43: (wt=9) 220 [para_into,216.1.1,12.1.1] DR(x,$c2)|$c2!=$c1|$c1!=x.

given clause #44: (wt=9) 221 [para_into,216.1.1,11.2.1] DR(x,$c2)|$c2!=$c1| -EQ($c1,x).

given clause #45: (wt=9) 223 [para_into,216.1.2,12.1.1] DR($c1,x)|$c2!=$c1|$c2!=x.

given clause #46: (wt=10) 43 [hyper,10,23,10] $f4($c1,$c2)<=$c2|$f4($c2,$c1)<=$c1.

given clause #47: (wt=9) 224 [para_into,216.1.2,11.2.1] DR($c1,x)|$c2!=$c1| -EQ($c2,x).

given clause #48: (wt=9) 226 [para_into,216.2.1,12.1.1] DR($c1,$c2)|x!=$c1|$c2!=x.

given clause #49: (wt=9) 227 [para_into,216.2.1,11.2.1] DR($c1,$c2)|x!=$c1| -EQ($c2,x).

given clause #50: (wt=9) 229 [para_into,217.1.1,12.1.1] DR(x,$c1)|$c2!=$c1|$c1!=x.

given clause #51: (wt=10) 44 [hyper,10,23,9] $f4($c1,$c2)<=$c2|$f4($c2,$c1)<=$c2.

given clause #52: (wt=5) 679 [hyper,44,8,9,28,factor_simp,factor_simp] $f4($c2,$c1)<=$c2.

given clause #53: (wt=5) 692 [hyper,44,8,10,43,factor_simp,factor_simp] $f4($c1,$c2)<=$c2.

given clause #54: (wt=7) 704 [hyper,679,8,10,20] $f4($f4($c2,$c1),$c2)<=$c2.

given clause #55: (wt=7) 707 [hyper,679,8,9,20] $f4($c2,$f4($c2,$c1))<=$c2.

given clause #56: (wt=10) 45 [hyper,10,23,9] $f4($c2,$c1)<=$c1|$f4($c1,$c2)<=$c1.

given clause #57: (wt=5) 828 [hyper,45,8,9,679,factor_simp] $f4($c1,$c2)<=$c1.

given clause #58: (wt=3) 853 [hyper,828,8,27,692] DR($c1,$c2).

-----> EMPTY CLAUSE at   0.33 sec ----> 1069 [hyper,853,8,828,692] $F.

Length of proof is 8.  Level of proof is 4.

---------------- PROOF ----------------

8 [] -DR(x,y)| -(z<=x)| -(z<=y).
9 [] DR(x,y)|$f4(x,y)<=x.
10 [] DR(x,y)|$f4(x,y)<=y.
23 [] -DR($c2,$c1)| -DR($c1,$c2).
27 [] DR($c2,$c1)|DR($c1,$c2).
28 [hyper,9,23,9] $f4($c1,$c2)<=$c1|$f4($c2,$c1)<=$c2.
43 [hyper,10,23,10] $f4($c1,$c2)<=$c2|$f4($c2,$c1)<=$c1.
44 [hyper,10,23,9] $f4($c1,$c2)<=$c2|$f4($c2,$c1)<=$c2.
45 [hyper,10,23,9] $f4($c2,$c1)<=$c1|$f4($c1,$c2)<=$c1.
679 [hyper,44,8,9,28,factor_simp,factor_simp] $f4($c2,$c1)<=$c2.
692 [hyper,44,8,10,43,factor_simp,factor_simp] $f4($c1,$c2)<=$c2.
828 [hyper,45,8,9,679,factor_simp] $f4($c1,$c2)<=$c1.
853 [hyper,828,8,27,692] DR($c1,$c2).
1069 [hyper,853,8,828,692] $F.

------------ end of proof -------------


Search stopped by max_proofs option.

============ end of search ============

-------------- statistics -------------
clauses given                 58
clauses generated          22484
clauses kept                1068
clauses forward subsumed   21433
clauses back subsumed        249
Kbytes malloced             2929

----------- times (seconds) -----------
user CPU time          0.33          (0 hr, 0 min, 0 sec)
system CPU time        0.00          (0 hr, 0 min, 0 sec)
wall-clock time        0             (0 hr, 0 min, 0 sec)

That finishes the proof of the theorem.

Process 31517 finished Sun Aug 28 15:46:20 2022
